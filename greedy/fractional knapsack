
/*
class Item {
    int value, weight;
    Item(int x, int y){
        this.value = x;
        this.weight = y;
    }
}
*/
class itemComparator implements Comparator<Item>{
    public int compare(Item a,Item b){
        double r1=(double) a.value/ (double)a.weight;
        double r2=(double) b.value/ (double)b.weight;
        if(r1>r2) return -1;
        else if(r1<r2) return 1;
        else return 0;
    }
}
class Solution
{
    //Function to get the maximum total value in the knapsack.
    double fractionalKnapsack(int W, Item arr[], int n) 
    {
        // Your code here
        Arrays.sort(arr,new itemComparator());
        double value=0.0;
        for(int i=0;i<n;i++){
            if(arr[i].weight<=W){
                value+=arr[i].value;
                W-=arr[i].weight;
            }
            else{
               value+= ((double)arr[i].value/(double)arr[i].weight) * (double)W;
               break;
            }
        }
        return value;
    }
}
