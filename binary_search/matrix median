public final class Solution {
    public static int findMedian(int matrix[][], int m, int n) {
        // Write your code here
        int low=Integer.MAX_VALUE;
        int high=Integer.MIN_VALUE;
        int threshold=(m*n)/2;
        for(int i=0;i<m;i++){
            low=Math.min(low,matrix[i][0]);
            high=Math.max(high,matrix[i][n-1]);
        }
        while(low<=high){
            int mid=low+(high-low)/2;
            if(blackBox(matrix,mid)>threshold)       //maybe an answer
            {
                //ans=mid;
                high=mid-1;    
            }
            else{
                low=mid+1;
            }
        }
        return low;
    }
    public static int blackBox(int[][] matrix,int threshold){
        int count=0;
        for(int i=0;i<matrix.length;i++){
            count+=upperBound(matrix[i],threshold);
        }
        return count;
    }
    public static int upperBound(int arr[],int x){
        int low=0;
        int high=arr.length-1;
        int ans=arr.length;
        while(low<=high){
            int mid=low+(high-low)/2;
            if(arr[mid]>x){ //maybe answer
                ans=mid;
                high=mid-1;
            }
            else{
                low=mid+1;
            }
        }
        return ans;
    }
}
