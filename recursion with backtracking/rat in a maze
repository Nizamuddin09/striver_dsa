//{ Driver Code Starts
// Initial Template for Java

import java.util.*;
class Rat {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();

        while (t-- > 0) {
            int n = sc.nextInt();
            int[][] a = new int[n][n];
            for (int i = 0; i < n; i++)
                for (int j = 0; j < n; j++) a[i][j] = sc.nextInt();

            Solution obj = new Solution();
            ArrayList<String> res = obj.findPath(a, n);
            Collections.sort(res);
            if (res.size() > 0) {
                for (int i = 0; i < res.size(); i++)
                    System.out.print(res.get(i) + " ");
                System.out.println();
            } else {
                System.out.println(-1);
            }
        }
    }
}

// } Driver Code Ends


// User function Template for Java

// m is the given matrix and n is the order of matrix
class Solution {
    public static ArrayList<String> findPath(int[][] m, int n) {
        // Your code here
        ArrayList<String> ans=new ArrayList<String>();
        boolean vis[][]=new boolean[n][n];
        int di[]={1,0,0,-1};
        int dj[]={0,-1,1,0};
        if(m[0][0]==1){
            helper(0,0,"",ans,m,di,dj,vis);
        }
        return ans;
    }
    public static void helper(int row,int col,String s,ArrayList<String> ans,int[][] m,int[] di,int[] dj,boolean[][] vis){
        if(row==m.length-1 && col==m.length-1){
            ans.add(s);
            return;
        }
        String dir="DLRU";
        for(int i=0;i<4;i++){
            if(row+di[i]>=0 && row+di[i]<m.length && col+dj[i]>=0 && col+dj[i]<m.length && m[row+di[i]][col+dj[i]]==1 && !vis[row+di[i]][col+dj[i]]){
                vis[row][col]=true;
                helper(row+di[i],col+dj[i],s+dir.charAt(i),ans,m,di,dj,vis);
                vis[row][col]=false;
            }
        }
    }
    
    
}
