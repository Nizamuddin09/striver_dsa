
class Solution {
    public Node connect(Node root) {
    
    bfs
    //   if(root==null) return root;
    //   Queue<Node> q=new LinkedList<>();
    //   q.add(root);
    //   while(!q.isEmpty()){
    //         Node rightNode = null;
    //         for(int i=q.size()-1;i>=0;i--){
    //              Node temp = q.poll();
    //              temp.next = rightNode;
    //              rightNode = temp;
    //              if(temp.left!=null){
    //                  q.add(temp.right);
    //                  q.add(temp.left);
    //              }
    //         }
    //   }
    //   return root;
    
    dfs-best
    if(root==null) return root;
    if(root.left!=null){
    root.left.next=root.right;

    if(root.next!=null){
        root.right.next=root.next.left;
    }
    }

    connect(root.left);
    connect(root.right);
     return root;
    }
}
