
class BSTIterator {
    private Stack<TreeNode> s=new Stack<TreeNode>(); 
    public BSTIterator(TreeNode root) {
        pushAll(root);
    }

    public void pushAll(TreeNode root){
        while(root!=null){
            s.push(root);
            root=root.left;
        }
    }
    
    public int next() {
        if(!s.isEmpty()){
        TreeNode temp=s.pop();
        pushAll(temp.right);
        return temp.val;
        }
        return 0;
    }
    
    public boolean hasNext() {
        return !s.isEmpty();
    }
}

/**
 * Your BSTIterator object will be instantiated and called as such:
 * BSTIterator obj = new BSTIterator(root);
 * int param_1 = obj.next();
 * boolean param_2 = obj.hasNext();
 */
