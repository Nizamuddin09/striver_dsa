
class Solution {
    static int[] bellman_ford(int V, ArrayList<ArrayList<Integer>> edges, int S) {
        // Write your code here
        int[] dist=new int[V];
        for (int i = 0; i < V; i++) dist[i] = (int)(1e8);
        dist[S]=0;
        for(int i=0;i<V-1;i++){
            for(int j=0;j<edges.size();j++){
                int u=edges.get(j).get(0);
                int v=edges.get(j).get(1);
                int w=edges.get(j).get(2);
                if(dist[u]!=(int)(1e8) && dist[u]+w<dist[v]){
                    dist[v]=dist[u]+w;
                }
            }
        }
        for(ArrayList<Integer> n:edges){
            int u=n.get(0);
            int v=n.get(1);
            int w=n.get(2);
                if(dist[u]!=1e8 && dist[u]+w<dist[v]){
            int temp[] = new int[1];
                temp[0] = -1;
                return temp;
                }
        }
        return dist;
    }
}
