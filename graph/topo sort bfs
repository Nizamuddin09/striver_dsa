
class Solution
{
    //Function to return list containing vertices in Topological order. 
    static int[] topoSort(int V, ArrayList<ArrayList<Integer>> adj) 
    {
        // add your code here
        int[] indegree = new int[V];
        for(int i=0;i<adj.size();i++){
            for(Integer n:adj.get(i)){
                indegree[n]++;
            }
        }
        Queue<Integer> q=new LinkedList<>();
        for(int i=0;i<V;i++){
            if(indegree[i]==0){
                q.add(i);
            }
        }
        int[] ans=new int[V];
        int ind=0;
        while(!q.isEmpty()){
            Integer node=q.poll();
            ans[ind++]=node;
            for(Integer n:adj.get(node)){
                indegree[n]--;
                if(indegree[n]==0){
                    q.add(n);
                }
            }
        }
        return ans;
    }
}
