class Pair{
    Node node;
    int hd;
    Pair(Node root,int hd){
        this.node=root;
        this.hd=hd;
    }
}

class Solution
{
    //Function to return a list containing the bottom view of the given tree.
    public ArrayList <Integer> bottomView(Node root)
    {
        // Code here
        Queue<Node> q=new LinkedList<>();
        ArrayList <Integer> result=new ArrayList <Integer>();
        root.hd=0;
        q.add(root);
        Map<Integer,Integer> m=new TreeMap<Integer,Integer>(); 
        while(!q.isEmpty()){
            Node temp=q.poll();
            m.put(temp.hd,temp.data);
            if(temp.left!=null){
                temp.left.hd=temp.hd-1;
                q.add(temp.left);
            }
            if(temp.right!=null){
                temp.right.hd=temp.hd+1;
                q.add(temp.right);
            }
        }
        
        for (Map.Entry<Integer,Integer> entry : m.entrySet()) {
            result.add(entry.getValue()); 
        }
        return result;
    }
}
