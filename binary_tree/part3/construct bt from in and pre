class Solution {
    public TreeNode buildTree(int[] preorder, int[] inorder) {
        Map<Integer,Integer> map=new HashMap<Integer,Integer>();
        for(int i=0;i<inorder.length;i++){
            map.put(inorder[i],i);
        }
        TreeNode root=build(inorder,preorder,0,inorder.length-1,0,preorder.length-1,map);
        return root;
    }
    public static TreeNode build(int[] inorder,int[] preorder, int inStart,int inEnd,int preStart,int preEnd,Map<Integer,Integer> map){
        if(inStart>inEnd && preStart>preEnd) return null;
        TreeNode root=new TreeNode(preorder[preStart]);
        int inRoot=map.get(preorder[preStart]);
        root.left=build(inorder,preorder,inStart,inRoot-1,preStart+1,preStart+inRoot-inStart,map);
        root.right=build(inorder,preorder,inRoot+1,inEnd,preStart+inRoot-inStart+1,preEnd,map);
        return root;
    }
}
