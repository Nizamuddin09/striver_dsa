class Solution {
    public TreeNode buildTree(int[] inorder, int[] postorder) {
        Map<Integer,Integer> map=new HashMap<Integer,Integer>();
        for(int i=0;i<postorder.length;i++){
            map.put(inorder[i],i);
        }
        TreeNode root=build(inorder,postorder,0,inorder.length-1,0,postorder.length-1,map);
        return root;
    }
    public TreeNode build(int[] inorder, int[] postorder,int instart,int inend,int poststart,int postend,Map<Integer,Integer> map){
        if(instart>inend && poststart>postend) return null;
        TreeNode root=new TreeNode(postorder[postend]);
        int inroot=map.get(postorder[postend]);
        root.left=build(inorder,postorder,instart,inroot-1,poststart,inroot-instart+poststart-1,map);
        root.right=build(inorder,postorder,inroot+1,inend,inroot-instart+poststart,postend-1,map);
        return root;    }
}
