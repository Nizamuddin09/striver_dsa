class Solution {
    public int reversePairs(int[] nums) {
        return mergeSort(nums,nums.length);
    }
    public int mergeSort(int nums[],int n){
        if(n<2) return 0;
        int mid=n/2;
        int left[]=new int[mid];
        int right[]=new int[n-mid];
        for(int i=0;i<mid;i++){
            left[i]=nums[i];
        }
        for(int j=mid;j<n;j++){
           right[j-mid]=nums[j];   
        }
        int inv=mergeSort(left,left.length);
        inv+=mergeSort(right,right.length);
        inv+=merge(nums,left,right);
        return inv;
    }
    public int merge(int arr[],int left[],int right[]){
            int n=arr.length;
    int l=left.length;
    int r=right.length;
       int cnt=0; 
     for(int i=0,j=0;i<l && j<r;){
         if((left[i]/2.0)>right[j]){
             cnt+= l-i;
             j++;
         }
         else{
             i++;
         }
     }   
        
        
    int k=0,i=0,j=0;
        
    while(i < l && j < r){
    if(left[i]<=right[j]){
    arr[k++]=left[i++];
    }
    else{
    arr[k++]=right[j++];
    }
    }
    while(i<l){
    arr[k++]=left[i++];
    }
    
    while(j<r){
    arr[k++]=right[j++];
    }
     return cnt;   
    }
}
