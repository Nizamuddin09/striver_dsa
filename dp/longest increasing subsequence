tabulation

class Solution {
    public int lengthOfLIS(int[] nums) {
        int n=nums.length;
        int dp[]=new int[n];
        int ans=0;
        for(int i=0;i<n;i++){
            int max=0;
            for(int j=0;j<i;j++){
                if(nums[j]<nums[i] && dp[j]>max){
                    max=dp[j];
                }
            }
            dp[i]=max+1;
            if(dp[i]>ans){
                ans=dp[i];
            }
        }
        return ans;
    }
}

binary search

class Solution {
    public int lengthOfLIS(int[] nums) {
ArrayList<Integer> dp = new ArrayList<Integer>();
      dp.add(nums[0]);
        int len=0;
        for(int i=1;i<nums.length;i++){
            if(nums[i]> dp.get(dp.size()-1)){
               dp.add(nums[i]);
                len++;
            }
            else{
        int index = Collections.binarySearch(dp, nums[i]);
                   if(index<0){
                index=-(index+1);
            }
                dp.set(index,nums[i]);
            }
        }
        return len+1; 
    }
}
