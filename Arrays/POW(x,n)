class Solution {
    public double myPow(double x, int n) {
        boolean negative=false;
        long nn=n;
        if(nn<0){
            negative=true;
            nn=-1*nn;
        }
        double ans=calc(x,nn);
        return negative?1/ans:ans;
    }
    public double calc(double x,long n){
        if(n==0){
            return 1;
        }
        else if(n%2==0){
            return calc(x*x,n/2);
        }
        else{
            return x*calc(x,n-1);
        }
    }
}

class Solution {
    public double myPow(double x, int n) {
       double ans = 1.0;
        long nn = n;
        if(nn < 0) nn = -1*nn;
        while(nn>0){
            if(nn%2 == 1){
                ans=ans*x;
                nn=nn-1;
            }
            else{
                x=x*x;
                nn=nn/2;
            }
            
        }
        if(n<0) ans=(double) (1.0)/ans;
        return ans;
        
  }
  }
